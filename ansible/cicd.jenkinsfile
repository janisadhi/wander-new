pipeline {
    agent any

    environment {
        GITHUB_REPO_URL = 'https://github.com/janisadhi/wander-new'
        FRONTEND_IMAGE = 'janisadhi/frontend-wanderlust:v0.0.2'
        BACKEND_IMAGE = 'janisadhi/backend-wanderlust:v0.0.2'
        DOCKERHUB_CREDENTIALS = credentials('docker-cred') 
        KUBE_NAMESPACE = 'wanderlust'
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository from GitHub...'
                git branch: 'master', url: "${env.GITHUB_REPO_URL}"
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    echo 'Building Docker images...'
                    sh "docker build -t ${FRONTEND_IMAGE} ./frontend"
                    sh "docker build -t ${BACKEND_IMAGE} ./backend"
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    echo 'Logging into Docker Hub...'
                    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKERHUB_USR', passwordVariable: 'DOCKERHUB_PASS')]) {
                        sh "echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USR} --password-stdin"
                    }
                    
                    echo 'Pushing Docker images to Docker Hub...'
                    sh "docker push ${FRONTEND_IMAGE}"
                    sh "docker push ${BACKEND_IMAGE}"
                }
            }
        }

        stage('Deploy To Kubernetes') {
            steps {
                withKubeCredentials(kubectlCredentials: [
                    [caCertificate: '', clusterName: 'EKS-1.ap-south-1.eksctl.io', contextName: 'EKS-1.ap-south-1.eksctl.io', credentialsId: 'k8-token', namespace: 'wanderlust', serverUrl: 'https://6F50EA699301092F4FAAD68984E90412.gr7.ap-south-1.eks.amazonaws.com']
                ]) {
                    sh "kubectl apply -f deployment.yml -n wanderlust"
                }
            }
        }

        stage('Rollout Restart Frontend Deployment') {
            steps {
                withKubeCredentials(kubectlCredentials: [
                    [caCertificate: '', clusterName: 'EKS-1.ap-south-1.eksctl.io', contextName: 'EKS-1.ap-south-1.eksctl.io', credentialsId: 'k8-token', namespace: 'wanderlust', serverUrl: 'https://6F50EA699301092F4FAAD68984E90412.gr7.ap-south-1.eks.amazonaws.com']
                ]) {
                    echo 'Rolling out the frontend deployment restart...'
                    sh "kubectl rollout restart deployment wanderlust-frontend -n wanderlust"
                }
            }
        }

        stage('Rollout Restart Backend Deployment') {
            steps {
                withKubeCredentials(kubectlCredentials: [
                    [caCertificate: '', clusterName: 'EKS-1.ap-south-1.eksctl.io', contextName: 'EKS-1.ap-south-1.eksctl.io', credentialsId: 'k8-token', namespace: 'wanderlust', serverUrl: 'https://6F50EA699301092F4FAAD68984E90412.gr7.ap-south-1.eks.amazonaws.com']
                ]) {
                    echo 'Rolling out the backend deployment restart...'
                    sh "kubectl rollout restart deployment wanderlust-backend -n wanderlust"
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
    }
}
