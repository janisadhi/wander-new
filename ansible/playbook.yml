---
- name: Install Docker on production server
  hosts: wanderlust
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install prerequisites for Docker
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create apt keyring directory
      shell: install -m 0755 -d /etc/apt/keyrings

    - name: Add Docker's official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc

    - name: Add Docker apt repository
      shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - docker-compose
        state: present

    - name: create a working folder wanderlust
      file: 
        path: /home/ubuntu/wanderlust
        state: directory
        mode: '0755'

    - name: Copy docker-compose file
      copy:
        src: ./docker-compose.yml
        dest: /home/ubuntu/wanderlust/docker-compose.yml

    - name: Copy .env file
      copy:
        src: ./.env
        dest: /home/ubuntu/wanderlust/.env

    - name: Copy .env.local file
      copy:
        src: ./.env.local
        dest: /home/ubuntu/wanderlust/.env.local

    - name: Docker compose up
      shell: docker-compose -f /home/ubuntu/wanderlust/docker-compose.yml up --detach

    - name: data seeding
      shell: docker exec -it mongodb mongoimport --db wanderlust --collection posts --file sample_posts.json --jsonArray

    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Create Nginx reverse proxy configuration file
      copy:
        src: ./default
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      ignore_errors: yes

    - name: Reload Nginx if configuration is valid
      systemd:
        name: nginx
        state: reloaded
      when: nginx_test.rc == 0
